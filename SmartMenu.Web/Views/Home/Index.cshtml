@model IEnumerable<ProductDto>
@{
    var categories = ViewBag.Categories as List<CategoryDto>;
    var selectedCategoryId = ViewContext.HttpContext.Request.Query["categoryId"].ToString();
    var pageNumber = ViewBag.PageNumber ?? 1;
    var totalPages = ViewBag.TotalPages ?? 1; 
}

<form method="get" asp-action="Index">
    <div class="container row my-3">
        <div class="col-12">
            <div class="input-group" style="width: 100%;">
                <input type="text" name="searchTerm" class="form-control" placeholder="Search products..."
                       value="@ViewContext.HttpContext.Request.Query["searchTerm"]" />
                <select name="categoryId" class="form-select mx-2">
                    <option value="">All Categories</option>
                    @if (categories != null)
                    {
                        foreach (var category in categories)
                        {
                            if (selectedCategoryId == category.CategoryId.ToString())
                            {
                                <option value="@category.CategoryId" selected>@category.Name</option>
                            }
                            else
                            {
                                <option value="@category.CategoryId">@category.Name</option>
                            }
                        }
                    }
                </select>
                <select name="sortOrder" class="form-select mx-2">
                    <option value="">Sort By</option>
                    @{
                        var sortOrder = ViewContext.HttpContext.Request.Query["sortOrder"].ToString();
                        var sortOptions = new List<(string Value, string Text)>
                    {
                    ("priceAsc", "Price: Low to High"),
                    ("priceDesc", "Price: High to Low"),
                    ("nameAsc", "Name: A to Z"),
                    ("nameDesc", "Name: Z to A")
                    };

                        foreach (var option in sortOptions)
                        {
                            if (sortOrder == option.Value)
                            {
                                <option value="@option.Value" selected>@option.Text</option>
                            }
                            else
                            {
                                <option value="@option.Value">@option.Text</option>
                            }
                        }
                    }
                </select>
                <button type="submit" class="btn btn-primary">Search</button>
            </div>
        </div>
    </div>
</form>

<div class="container row">
    @foreach (var product in Model)
    {
        <div class="col-12 col-md-6 col-lg-4">
            <div class="p-0 my-3 border rounded shadow-sm">
                <div class="card h-100">
                    <h3 class="card-title text-dark text-center py-2 bg-light">@product.Name</h3>
                    <img src="@product.ImageUrl" class="card-img-top" alt="@product.Name" style="width: 100%; height: 300px; object-fit: cover;">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center py-2">
                            <span class="text-danger fw-bold" style="font-size:1.25rem;">@string.Format("{0:c}", product.Price)</span>
                            <span class="badge bg-warning text-white p-2">@product.Category.Name</span>
                        </div>
                        <p class="card-text text-muted">
                            @{
                                // Розділити текст на частини за подвійним розривом рядка (\n\n)
                                var descriptionParts = product.Description.Split(new[] { "\n" }, StringSplitOptions.None);
                                string limitedDescription = descriptionParts[0]; // Взяти тільки перший абзац
                            }
                            @Html.Raw(limitedDescription)
                        </p>
                        <div class="row">
                            <div class="col">
                                <a asp-action="ProductDetails" asp-route-productId="@product.ProductId"
                                   class="btn btn-outline-primary form-control">Details</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<!-- Pagination Controls -->
<nav class="mt-4">
    <ul class="pagination justify-content-center">
        <li class="page-item @(pageNumber == 1 ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { pageNumber = pageNumber - 1, categoryId = selectedCategoryId })">Previous</a>
        </li>
        @for (int i = 1; i <= totalPages; i++)
        {
            <li class="page-item @(pageNumber == i ? "active" : "")">
                <a class="page-link" href="@Url.Action("Index", new { pageNumber = i, categoryId = selectedCategoryId })">@i</a>
            </li>
        }
        <li class="page-item @(pageNumber == totalPages ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { pageNumber = pageNumber + 1, categoryId = selectedCategoryId })">Next</a>
        </li>
    </ul>
</nav>